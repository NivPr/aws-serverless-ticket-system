{
  "version": "48.0.0",
  "artifacts": {
    "AwsCdkAppStack.assets": {
      "type": "cdk:asset-manifest",
      "properties": {
        "file": "AwsCdkAppStack.assets.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
      }
    },
    "AwsCdkAppStack": {
      "type": "aws:cloudformation:stack",
      "environment": "aws://unknown-account/unknown-region",
      "properties": {
        "templateFile": "AwsCdkAppStack.template.json",
        "terminationProtection": false,
        "validateOnSynth": false,
        "assumeRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-deploy-role-${AWS::AccountId}-${AWS::Region}",
        "cloudFormationExecutionRoleArn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-cfn-exec-role-${AWS::AccountId}-${AWS::Region}",
        "stackTemplateAssetObjectUrl": "s3://cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}/d3a97c20a6c76cc795d6d5527f78e6bc05763a06db2cda1a2dc8fa3a25a01f05.json",
        "requiresBootstrapStackVersion": 6,
        "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version",
        "additionalDependencies": [
          "AwsCdkAppStack.assets"
        ],
        "lookupRole": {
          "arn": "arn:${AWS::Partition}:iam::${AWS::AccountId}:role/cdk-hnb659fds-lookup-role-${AWS::AccountId}-${AWS::Region}",
          "requiresBootstrapStackVersion": 8,
          "bootstrapStackVersionSsmParameter": "/cdk-bootstrap/hnb659fds/version"
        }
      },
      "dependencies": [
        "AwsCdkAppStack.assets"
      ],
      "metadata": {
        "/AwsCdkAppStack/TicketFunc/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TicketFuncServiceRole30348E59"
          }
        ],
        "/AwsCdkAppStack/TicketFunc/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TicketFuncServiceRoleDefaultPolicyA88F8A04"
          }
        ],
        "/AwsCdkAppStack/TicketFunc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "TicketFuncBD0241B6"
          }
        ],
        "/AwsCdkAppStack/AuthFunc/ServiceRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthFuncServiceRole3555119C"
          }
        ],
        "/AwsCdkAppStack/AuthFunc/ServiceRole/DefaultPolicy/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthFuncServiceRoleDefaultPolicy6F10E360"
          }
        ],
        "/AwsCdkAppStack/AuthFunc/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "AuthFunc096F4DD9"
          }
        ],
        "/AwsCdkAppStack/MyCognitoAuthorizer/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyCognitoAuthorizer538AD78E"
          }
        ],
        "/AwsCdkAppStack/ApiAccessLogs/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiAccessLogsE9DF007D"
          }
        ],
        "/AwsCdkAppStack/MyApi/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApi49610EDF"
          }
        ],
        "/AwsCdkAppStack/MyApi/CloudWatchRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiCloudWatchRole2BEC1A9C"
          }
        ],
        "/AwsCdkAppStack/MyApi/Account": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiAccount13882D84"
          }
        ],
        "/AwsCdkAppStack/MyApi/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiDeploymentECB0D05E92000a1c51d43e859bd1090d09d377f0"
          }
        ],
        "/AwsCdkAppStack/MyApi/DeploymentStage.dev/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiDeploymentStagedevDB491209"
          }
        ],
        "/AwsCdkAppStack/MyApi/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiEndpoint869ABE96"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiOPTIONSDA752FC6"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApitickets1C46F871"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsOPTIONS9C6CC032"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/addTicket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsaddTicket9F608716"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/addTicket/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsaddTicketOPTIONSAB569534"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/addTicket/POST/ApiPermission.AwsCdkAppStackMyApi696462DD.POST..tickets.addTicket": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsaddTicketPOSTApiPermissionAwsCdkAppStackMyApi696462DDPOSTticketsaddTicket28E0B5BF"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/addTicket/POST/ApiPermission.Test.AwsCdkAppStackMyApi696462DD.POST..tickets.addTicket": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsaddTicketPOSTApiPermissionTestAwsCdkAppStackMyApi696462DDPOSTticketsaddTicketF9200D3C"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/addTicket/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsaddTicketPOST5899369A"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/editTicket/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketseditTicket07B0B25D"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/editTicket/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketseditTicketOPTIONSE3457DBB"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/editTicket/PUT/ApiPermission.AwsCdkAppStackMyApi696462DD.PUT..tickets.editTicket": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketseditTicketPUTApiPermissionAwsCdkAppStackMyApi696462DDPUTticketseditTicket3D6CD97E"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/editTicket/PUT/ApiPermission.Test.AwsCdkAppStackMyApi696462DD.PUT..tickets.editTicket": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketseditTicketPUTApiPermissionTestAwsCdkAppStackMyApi696462DDPUTticketseditTicket817F82A0"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/editTicket/PUT/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketseditTicketPUT708A637A"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/delete/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsdeleteFE9292BC"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/delete/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsdeleteOPTIONSDA2C3C11"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/delete/DELETE/ApiPermission.AwsCdkAppStackMyApi696462DD.DELETE..tickets.delete": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsdeleteDELETEApiPermissionAwsCdkAppStackMyApi696462DDDELETEticketsdeleteC79736DB"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/delete/DELETE/ApiPermission.Test.AwsCdkAppStackMyApi696462DD.DELETE..tickets.delete": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsdeleteDELETEApiPermissionTestAwsCdkAppStackMyApi696462DDDELETEticketsdelete4C820F94"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/delete/DELETE/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsdeleteDELETEF568D0C6"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/searchByTitle/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketssearchByTitle423C13ED"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/searchByTitle/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketssearchByTitleOPTIONS4EB9D206"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/searchByTitle/GET/ApiPermission.AwsCdkAppStackMyApi696462DD.GET..tickets.searchByTitle": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketssearchByTitleGETApiPermissionAwsCdkAppStackMyApi696462DDGETticketssearchByTitleAA6F3C93"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/searchByTitle/GET/ApiPermission.Test.AwsCdkAppStackMyApi696462DD.GET..tickets.searchByTitle": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketssearchByTitleGETApiPermissionTestAwsCdkAppStackMyApi696462DDGETticketssearchByTitleA9620433"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/searchByTitle/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketssearchByTitleGETFA08B866"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/{id}/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsid8A19D699"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/{id}/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsidOPTIONS1734BE2E"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/{id}/GET/ApiPermission.AwsCdkAppStackMyApi696462DD.GET..tickets.{id}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsidGETApiPermissionAwsCdkAppStackMyApi696462DDGETticketsidCCF2DBA3"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/{id}/GET/ApiPermission.Test.AwsCdkAppStackMyApi696462DD.GET..tickets.{id}": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsidGETApiPermissionTestAwsCdkAppStackMyApi696462DDGETticketsid4F8A0E78"
          }
        ],
        "/AwsCdkAppStack/MyApi/Default/tickets/{id}/GET/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "MyApiticketsidGET8A8974A9"
          }
        ],
        "/AwsCdkAppStack/ApiUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "ApiUrl"
          }
        ],
        "/AwsCdkAppStack/UserApiAccessLogs/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiAccessLogs44175256"
          }
        ],
        "/AwsCdkAppStack/UserApi/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiB6C12381"
          }
        ],
        "/AwsCdkAppStack/UserApi/CloudWatchRole/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiCloudWatchRoleCD3B20A5"
          }
        ],
        "/AwsCdkAppStack/UserApi/Account": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiAccount52C5A50A"
          }
        ],
        "/AwsCdkAppStack/UserApi/Deployment/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiDeployment24839811149419afdec04cc03199f8aa9d329930"
          }
        ],
        "/AwsCdkAppStack/UserApi/DeploymentStage.dev/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiDeploymentStagedevD4572DA0"
          }
        ],
        "/AwsCdkAppStack/UserApi/Endpoint": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiEndpoint22DD5314"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiOPTIONSC7FF09BC"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauth778C627A"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthOPTIONS92DA62B4"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/signUp/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthsignUpBD854F2E"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/signUp/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthsignUpOPTIONS62CD16EC"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/signUp/POST/ApiPermission.AwsCdkAppStackUserApiE4961334.POST..auth.signUp": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthsignUpPOSTApiPermissionAwsCdkAppStackUserApiE4961334POSTauthsignUp3DEBA8F4"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/signUp/POST/ApiPermission.Test.AwsCdkAppStackUserApiE4961334.POST..auth.signUp": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthsignUpPOSTApiPermissionTestAwsCdkAppStackUserApiE4961334POSTauthsignUpC6A846A3"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/signUp/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthsignUpPOST40245CBE"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/login/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthlogin518176FA"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/login/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthloginOPTIONS7BA3DC7C"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/login/POST/ApiPermission.AwsCdkAppStackUserApiE4961334.POST..auth.login": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthloginPOSTApiPermissionAwsCdkAppStackUserApiE4961334POSTauthloginB20F6CFB"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/login/POST/ApiPermission.Test.AwsCdkAppStackUserApiE4961334.POST..auth.login": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthloginPOSTApiPermissionTestAwsCdkAppStackUserApiE4961334POSTauthlogin988F4A98"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/login/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthloginPOSTCF4BC188"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/verifyCode/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthverifyCodeAA78A90C"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/verifyCode/OPTIONS/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthverifyCodeOPTIONSB50EC116"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/verifyCode/POST/ApiPermission.AwsCdkAppStackUserApiE4961334.POST..auth.verifyCode": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthverifyCodePOSTApiPermissionAwsCdkAppStackUserApiE4961334POSTauthverifyCodeEBBF1AC1"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/verifyCode/POST/ApiPermission.Test.AwsCdkAppStackUserApiE4961334.POST..auth.verifyCode": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthverifyCodePOSTApiPermissionTestAwsCdkAppStackUserApiE4961334POSTauthverifyCodeB2CD49AB"
          }
        ],
        "/AwsCdkAppStack/UserApi/Default/auth/verifyCode/POST/Resource": [
          {
            "type": "aws:cdk:logicalId",
            "data": "UserApiauthverifyCodePOSTCE0EE193"
          }
        ],
        "/AwsCdkAppStack/authApiUrl": [
          {
            "type": "aws:cdk:logicalId",
            "data": "authApiUrl"
          }
        ],
        "/AwsCdkAppStack/CDKMetadata/Default": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadata"
          }
        ],
        "/AwsCdkAppStack/CDKMetadata/Condition": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CDKMetadataAvailable"
          }
        ],
        "/AwsCdkAppStack/BootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "BootstrapVersion"
          }
        ],
        "/AwsCdkAppStack/CheckBootstrapVersion": [
          {
            "type": "aws:cdk:logicalId",
            "data": "CheckBootstrapVersion"
          }
        ]
      },
      "displayName": "AwsCdkAppStack"
    },
    "Tree": {
      "type": "cdk:tree",
      "properties": {
        "file": "tree.json"
      }
    },
    "aws-cdk-lib/feature-flag-report": {
      "type": "cdk:feature-flag-report",
      "properties": {
        "module": "aws-cdk-lib",
        "flags": {
          "@aws-cdk/core:enableStackNameDuplicates": {
            "recommendedValue": true,
            "explanation": "Allow multiple stacks with the same name",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "aws-cdk:enableDiffNoFail": {
            "recommendedValue": true,
            "explanation": "Make `cdk diff` not fail when there are differences",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:newStyleStackSynthesis": {
            "recommendedValue": true,
            "explanation": "Switch to new stack synthesis method which enables CI/CD",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:stackRelativeExports": {
            "recommendedValue": true,
            "explanation": "Name exports based on the construct paths relative to the stack, rather than the global construct path",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecr-assets:dockerIgnoreSupport": {
            "recommendedValue": true,
            "explanation": "DockerImageAsset properly supports `.dockerignore` files by default",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-secretsmanager:parseOwnedSecretName": {
            "recommendedValue": true,
            "explanation": "Fix the referencing of SecretsManager names from ARNs",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-kms:defaultKeyPolicies": {
            "recommendedValue": true,
            "explanation": "Tighten default KMS key policies",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-s3:grantWriteWithoutAcl": {
            "recommendedValue": true,
            "explanation": "Remove `PutObjectAcl` from Bucket.grantWrite",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-ecs-patterns:removeDefaultDesiredCount": {
            "recommendedValue": true,
            "explanation": "Do not specify a default DesiredCount for ECS services",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-rds:lowercaseDbIdentifier": {
            "recommendedValue": true,
            "explanation": "Force lowercasing of RDS Cluster names in CDK",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-apigateway:usagePlanKeyOrderInsensitiveId": {
            "recommendedValue": true,
            "explanation": "Allow adding/removing multiple UsagePlanKeys independently",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-efs:defaultEncryptionAtRest": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have elastic file systems encrypted at rest by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeVersionProps": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the  `fn.currentVersion`.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-lambda:recognizeLayerVersion": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to opt in to the updated logical id calculation for Lambda Version created using the `fn.currentVersion`."
          },
          "@aws-cdk/aws-cloudfront:defaultSecurityPolicyTLSv1.2_2021": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have cloudfront distributions use the security policy TLSv1.2_2021 by default.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:checkSecretUsage": {
            "recommendedValue": true,
            "explanation": "Enable this flag to make it impossible to accidentally use SecretValues in unsafe locations"
          },
          "@aws-cdk/core:target-partitions": {
            "recommendedValue": [
              "aws",
              "aws-cn"
            ],
            "explanation": "What regions to include in lookup tables of environment agnostic stacks"
          },
          "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": {
            "recommendedValue": true,
            "explanation": "ECS extensions will automatically add an `awslogs` driver if no logging is specified"
          },
          "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to have Launch Templates generated by the `InstanceRequireImdsv2Aspect` use unique names."
          },
          "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": {
            "recommendedValue": true,
            "explanation": "ARN format used by ECS. In the new ARN format, the cluster name is part of the resource ID."
          },
          "@aws-cdk/aws-iam:minimizePolicies": {
            "recommendedValue": true,
            "explanation": "Minimize IAM policies by combining Statements"
          },
          "@aws-cdk/core:validateSnapshotRemovalPolicy": {
            "recommendedValue": true,
            "explanation": "Error on snapshot removal policies on resources that do not support it."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": {
            "recommendedValue": true,
            "explanation": "Generate key aliases that include the stack name"
          },
          "@aws-cdk/aws-s3:createDefaultLoggingPolicy": {
            "recommendedValue": true,
            "explanation": "Enable this feature flag to create an S3 bucket policy by default in cases where an AWS service would automatically create the Policy if one does not exist."
          },
          "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": {
            "recommendedValue": true,
            "explanation": "Restrict KMS key policy for encrypted Queues a bit more"
          },
          "@aws-cdk/aws-apigateway:disableCloudWatchRole": {
            "recommendedValue": true,
            "explanation": "Make default CloudWatch Role behavior safe for multiple API Gateways in one environment"
          },
          "@aws-cdk/core:enablePartitionLiterals": {
            "recommendedValue": true,
            "explanation": "Make ARNs concrete if AWS partition is known"
          },
          "@aws-cdk/aws-events:eventsTargetQueueSameAccount": {
            "recommendedValue": true,
            "explanation": "Event Rules may only push to encrypted SQS queues in the same account"
          },
          "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": {
            "recommendedValue": true,
            "explanation": "Avoid setting the \"ECS\" deployment controller when adding a circuit breaker"
          },
          "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": {
            "recommendedValue": true,
            "explanation": "Enable this feature to by default create default policy names for imported roles that depend on the stack the role is in."
          },
          "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": {
            "recommendedValue": true,
            "explanation": "Use S3 Bucket Policy instead of ACLs for Server Access Logging"
          },
          "@aws-cdk/aws-route53-patters:useCertificate": {
            "recommendedValue": true,
            "explanation": "Use the official `Certificate` resource instead of `DnsValidatedCertificate`"
          },
          "@aws-cdk/customresources:installLatestAwsSdkDefault": {
            "recommendedValue": false,
            "explanation": "Whether to install the latest SDK by default in AwsCustomResource"
          },
          "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": {
            "recommendedValue": true,
            "explanation": "Use unique resource name for Database Proxy"
          },
          "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": {
            "recommendedValue": true,
            "explanation": "Remove CloudWatch alarms from deployment group"
          },
          "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": {
            "recommendedValue": true,
            "explanation": "Include authorizer configuration in the calculation of the API deployment logical ID."
          },
          "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": {
            "recommendedValue": true,
            "explanation": "Define user data for a launch template by default when a machine image is provided."
          },
          "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": {
            "recommendedValue": true,
            "explanation": "SecretTargetAttachments uses the ResourcePolicy of the attached Secret."
          },
          "@aws-cdk/aws-redshift:columnId": {
            "recommendedValue": true,
            "explanation": "Whether to use an ID to track Redshift column changes"
          },
          "@aws-cdk/aws-stepfunctions-tasks:enableEmrServicePolicyV2": {
            "recommendedValue": true,
            "explanation": "Enable AmazonEMRServicePolicy_v2 managed policies"
          },
          "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": {
            "recommendedValue": true,
            "explanation": "Restrict access to the VPC default security group"
          },
          "@aws-cdk/aws-apigateway:requestValidatorUniqueId": {
            "recommendedValue": true,
            "explanation": "Generate a unique id for each RequestValidator added to a method"
          },
          "@aws-cdk/aws-kms:aliasNameRef": {
            "recommendedValue": true,
            "explanation": "KMS Alias name and keyArn will have implicit reference to KMS Key"
          },
          "@aws-cdk/aws-kms:applyImportedAliasPermissionsToPrincipal": {
            "recommendedValue": true,
            "explanation": "Enable grant methods on Aliases imported by name to use kms:ResourceAliases condition"
          },
          "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": {
            "recommendedValue": true,
            "explanation": "Generate a launch template when creating an AutoScalingGroup"
          },
          "@aws-cdk/core:includePrefixInUniqueNameGeneration": {
            "recommendedValue": true,
            "explanation": "Include the stack prefix in the stack name generation process"
          },
          "@aws-cdk/aws-efs:denyAnonymousAccess": {
            "recommendedValue": true,
            "explanation": "EFS denies anonymous clients accesses"
          },
          "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": {
            "recommendedValue": true,
            "explanation": "Enables support for Multi-AZ with Standby deployment for opensearch domains"
          },
          "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": {
            "recommendedValue": true,
            "explanation": "Enables aws-lambda-nodejs.Function to use the latest available NodeJs runtime as the default"
          },
          "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": {
            "recommendedValue": true,
            "explanation": "When enabled, mount targets will have a stable logicalId that is linked to the associated subnet."
          },
          "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": {
            "recommendedValue": true,
            "explanation": "When enabled, a scope of InstanceParameterGroup for AuroraClusterInstance with each parameters will change."
          },
          "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": {
            "recommendedValue": true,
            "explanation": "When enabled, will always use the arn for identifiers for CfnSourceApiAssociation in the GraphqlApi construct rather than id."
          },
          "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": {
            "recommendedValue": true,
            "explanation": "When enabled, creating an RDS database cluster from a snapshot will only render credentials for snapshot credentials."
          },
          "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForCodeCommitSource": {
            "recommendedValue": true,
            "explanation": "When enabled, the CodeCommit source action is using the default branch name 'main'."
          },
          "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": {
            "recommendedValue": true,
            "explanation": "When enabled, the logical ID of a Lambda permission for a Lambda action includes an alarm ID."
          },
          "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default value for crossAccountKeys to false."
          },
          "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": {
            "recommendedValue": true,
            "explanation": "Enables Pipeline to set the default pipeline type to V2."
          },
          "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": {
            "recommendedValue": true,
            "explanation": "When enabled, IAM Policy created from KMS key grant will reduce the resource scope to this key only."
          },
          "@aws-cdk/pipelines:reduceAssetRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from PipelineAssetsFileRole trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-eks:nodegroupNameAttribute": {
            "recommendedValue": true,
            "explanation": "When enabled, nodegroupName attribute of the provisioned EKS NodeGroup will not have the cluster name prefix."
          },
          "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": {
            "recommendedValue": true,
            "explanation": "When enabled, the default volume type of the EBS volume will be GP3"
          },
          "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": {
            "recommendedValue": true,
            "explanation": "When enabled, remove default deployment alarm settings"
          },
          "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": {
            "recommendedValue": false,
            "explanation": "When enabled, the custom resource used for `AwsCustomResource` will configure the `logApiResponseData` property as true by default"
          },
          "@aws-cdk/aws-s3:keepNotificationInImportedBucket": {
            "recommendedValue": false,
            "explanation": "When enabled, Adding notifications to a bucket in the current stack will not remove notification from imported stack."
          },
          "@aws-cdk/aws-stepfunctions-tasks:useNewS3UriParametersForBedrockInvokeModelTask": {
            "recommendedValue": true,
            "explanation": "When enabled, use new props for S3 URI field in task definition of state machine for bedrock invoke model.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/core:explicitStackTags": {
            "recommendedValue": true,
            "explanation": "When enabled, stack tags need to be assigned explicitly on a Stack."
          },
          "@aws-cdk/aws-ecs:enableImdsBlockingDeprecatedFeature": {
            "recommendedValue": false,
            "explanation": "When set to true along with canContainersAccessInstanceRole=false in ECS cluster, new updated commands will be added to UserData to block container accessing IMDS. **Applicable to Linux only. IMPORTANT: See [details.](#aws-cdkaws-ecsenableImdsBlockingDeprecatedFeature)**"
          },
          "@aws-cdk/aws-ecs:disableEcsImdsBlocking": {
            "recommendedValue": true,
            "explanation": "When set to true, CDK synth will throw exception if canContainersAccessInstanceRole is false. **IMPORTANT: See [details.](#aws-cdkaws-ecsdisableEcsImdsBlocking)**"
          },
          "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": {
            "recommendedValue": true,
            "explanation": "When enabled, we will only grant the necessary permissions when users specify cloudwatch log group through logConfiguration"
          },
          "@aws-cdk/aws-dynamodb:resourcePolicyPerReplica": {
            "recommendedValue": true,
            "explanation": "When enabled will allow you to specify a resource policy per replica, and not copy the source table policy to all replicas"
          },
          "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": {
            "recommendedValue": true,
            "explanation": "When enabled, initOptions.timeout and resourceSignalTimeout values will be summed together."
          },
          "@aws-cdk/aws-appsync:appSyncGraphQLAPIScopeLambdaPermission": {
            "recommendedValue": true,
            "explanation": "When enabled, a Lambda authorizer Permission created when using GraphqlApi will be properly scoped with a SourceArn."
          },
          "@aws-cdk/aws-rds:setCorrectValueForDatabaseInstanceReadReplicaInstanceResourceId": {
            "recommendedValue": true,
            "explanation": "When enabled, the value of property `instanceResourceId` in construct `DatabaseInstanceReadReplica` will be set to the correct value which is `DbiResourceId` instead of currently `DbInstanceArn`"
          },
          "@aws-cdk/core:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": {
            "recommendedValue": true,
            "explanation": "When enabled, CFN templates added with `cfn-include` will error if the template contains Resource Update or Create policies with CFN Intrinsics that include non-primitive values."
          },
          "@aws-cdk/aws-lambda-nodejs:sdkV3ExcludeSmithyPackages": {
            "recommendedValue": true,
            "explanation": "When enabled, both `@aws-sdk` and `@smithy` packages will be excluded from the Lambda Node.js 18.x runtime to prevent version mismatches in bundled applications."
          },
          "@aws-cdk/aws-stepfunctions-tasks:fixRunEcsTaskPolicy": {
            "recommendedValue": true,
            "explanation": "When enabled, the resource of IAM Run Ecs policy generated by SFN EcsRunTask will reference the definition, instead of constructing ARN."
          },
          "@aws-cdk/aws-ec2:bastionHostUseAmazonLinux2023ByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the BastionHost construct will use the latest Amazon Linux 2023 AMI, instead of Amazon Linux 2."
          },
          "@aws-cdk/core:aspectStabilization": {
            "recommendedValue": true,
            "explanation": "When enabled, a stabilization loop will be run when invoking Aspects during synthesis.",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-route53-targets:userPoolDomainNameMethodWithoutCustomResource": {
            "recommendedValue": true,
            "explanation": "When enabled, use a new method for DNS Name of user pool domain target without creating a custom resource."
          },
          "@aws-cdk/aws-elasticloadbalancingV2:albDualstackWithoutPublicIpv4SecurityGroupRulesDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, the default security group ingress rules will allow IPv6 ingress from anywhere"
          },
          "@aws-cdk/aws-iam:oidcRejectUnauthorizedConnections": {
            "recommendedValue": true,
            "explanation": "When enabled, the default behaviour of OIDC provider will reject unauthorized connections"
          },
          "@aws-cdk/core:enableAdditionalMetadataCollection": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will expand the scope of usage data collected to better inform CDK development and improve communication for security concerns and emerging issues."
          },
          "@aws-cdk/aws-lambda:createNewPoliciesWithAddToRolePolicy": {
            "recommendedValue": false,
            "explanation": "[Deprecated] When enabled, Lambda will create new inline policies with AddToRolePolicy instead of adding to the Default Policy Statement"
          },
          "@aws-cdk/aws-s3:setUniqueReplicationRoleName": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK will automatically generate a unique role name that is used for s3 object replication."
          },
          "@aws-cdk/pipelines:reduceStageRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "Remove the root account principal from Stage addActions trust policy",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-events:requireEventBusPolicySid": {
            "recommendedValue": true,
            "explanation": "When enabled, grantPutEventsTo() will use resource policies with Statement IDs for service principals."
          },
          "@aws-cdk/core:aspectPrioritiesMutating": {
            "recommendedValue": true,
            "explanation": "When set to true, Aspects added by the construct library on your behalf will be given a priority of MUTATING."
          },
          "@aws-cdk/aws-dynamodb:retainTableReplica": {
            "recommendedValue": true,
            "explanation": "When enabled, table replica will be default to the removal policy of source table unless specified otherwise."
          },
          "@aws-cdk/cognito:logUserPoolClientSecretValue": {
            "recommendedValue": false,
            "explanation": "When disabled, the value of the user pool client secret will not be logged in the custom resource lambda function logs.",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/pipelines:reduceCrossAccountActionRoleTrustScope": {
            "recommendedValue": true,
            "explanation": "When enabled, scopes down the trust policy for the cross-account action role",
            "unconfiguredBehavesLike": {
              "v2": true
            }
          },
          "@aws-cdk/aws-stepfunctions:useDistributedMapResultWriterV2": {
            "recommendedValue": true,
            "explanation": "When enabled, the resultWriterV2 property of DistributedMap will be used insted of resultWriter"
          },
          "@aws-cdk/s3-notifications:addS3TrustKeyPolicyForSnsSubscriptions": {
            "recommendedValue": true,
            "explanation": "Add an S3 trust policy to a KMS key resource policy for SNS subscriptions."
          },
          "@aws-cdk/aws-ec2:requirePrivateSubnetsForEgressOnlyInternetGateway": {
            "recommendedValue": true,
            "explanation": "When enabled, the EgressOnlyGateway resource is only created if private subnets are defined in the dual-stack VPC."
          },
          "@aws-cdk/aws-ec2-alpha:useResourceIdForVpcV2Migration": {
            "recommendedValue": false,
            "explanation": "When enabled, use resource IDs for VPC V2 migration",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          },
          "@aws-cdk/aws-s3:publicAccessBlockedByDefault": {
            "recommendedValue": true,
            "explanation": "When enabled, setting any combination of options for BlockPublicAccess will automatically set true for any options not defined."
          },
          "@aws-cdk/aws-lambda:useCdkManagedLogGroup": {
            "recommendedValue": true,
            "explanation": "When enabled, CDK creates and manages loggroup for the lambda function",
            "unconfiguredBehavesLike": {
              "v2": false
            }
          }
        }
      }
    }
  },
  "minimumCliVersion": "2.1024.0"
}